{"version":3,"file":"static/js/913.2f628064.chunk.js","mappings":"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","sources":["components/animations/LayoutAnimation.tsx"],"sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { animations } from '../../constants/animations';\n\ninterface LayoutAnimationProps {\n  isVisible: boolean;\n}\n\n// Styled Components\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n\nconst ViewportContainer = styled(motion.div)`\n  position: absolute;\n  inset: 2rem;\n  background-color: #f9fafb;\n  border-radius: 0.5rem;\n  border: 2px dashed #d1d5db;\n`;\n\nconst ViewportLabel = styled.div`\n  position: absolute;\n  top: -1.5rem;\n  left: 1rem;\n  font-size: 0.875rem;\n  color: #4b5563;\n  font-family: monospace;\n`;\n\nconst GridContainer = styled.div`\n  position: absolute;\n  inset: 0;\n  display: grid;\n  grid-template-columns: repeat(12, minmax(0, 1fr));\n  gap: 1rem;\n  padding: 1rem;\n  pointer-events: none;\n`;\n\nconst GridLine = styled.div`\n  height: 100%;\n  border-left: 1px solid #e5e7eb;\n`;\n\nconst ElementBox = styled(motion.div)`\n  position: absolute;\n  background-color: #eff6ff;\n  border: 2px solid #bfdbfe;\n  border-radius: 0.25rem;\n`;\n\nconst ElementLabel = styled.div`\n  position: absolute;\n  top: -2%;\n  left: 5%;\n  font-size: 0.75rem;\n  color: #2563eb;\n  font-family: monospace;\n`;\n\nconst MeasurementBox = styled(motion.div)`\n  position: absolute;\n  right: 18%;\n  top: 0;\n  background-color: white;\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.25rem;\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n  font-size: 0.75rem;\n  font-family: monospace;\n`;\n\nconst MeasurementText = styled.div`\n  color: #4b5563;\n`;\n\nconst MeasurementLines = styled(motion.div)`\n  position: absolute;\n  inset: 0;\n`;\n\nconst WidthArrow = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ArrowLine = styled.div`\n  height: 1px;\n  background-color: #60a5fa;\n  width: 100%;\n`;\n\nconst LeftArrowhead = styled.div`\n  position: absolute;\n  left: 0;\n  width: 0.5rem;\n  height: 0.5rem;\n  border-left: 2px solid #60a5fa;\n  border-top: 2px solid #60a5fa;\n  transform: translateY(-50%) rotate(-45deg);\n`;\n\nconst RightArrowhead = styled.div`\n  position: absolute;\n  right: 0;\n  width: 0.5rem;\n  height: 0.5rem;\n  border-right: 2px solid #60a5fa;\n  border-top: 2px solid #60a5fa;\n  transform: translateY(-50%) rotate(45deg);\n`;\n\nconst HeightArrow = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  display: flex;\n  align-items: center;\n`;\n\nconst VerticalArrowLine = styled.div`\n  width: 1px;\n  background-color: #60a5fa;\n  height: 100%;\n`;\n\nconst TopArrowhead = styled.div`\n  position: absolute;\n  top: 0;\n  height: 0.5rem;\n  width: 0.5rem;\n  border-left: 2px solid #60a5fa;\n  border-top: 2px solid #60a5fa;\n  transform: translateX(-50%) rotate(-45deg);\n`;\n\nconst BottomArrowhead = styled.div`\n  position: absolute;\n  bottom: 0;\n  height: 0.5rem;\n  width: 0.5rem;\n  border-left: 2px solid #60a5fa;\n  border-bottom: 2px solid #60a5fa;\n  transform: translateX(-50%) rotate(45deg);\n`;\n\nconst ReflowHint = styled(motion.div)`\n  position: absolute;\n  bottom: -23%;\n  right: 0;\n  background-color: white;\n  padding: 0.5rem 0.75rem;\n  border-radius: 0.5rem;\n  border: 1px solid #e5e7eb;\n`;\n\nconst ReflowText = styled.div`\n  color: #474747;\n  font-size: 0.875rem;\n`;\n\nconst ReflowSpan = styled.span`\n  font-weight: 500;\n`;\n\nconst LayoutAnimation: React.FC<LayoutAnimationProps> = ({ isVisible }) => {\n  const { t } = useTranslation();\n  const timeline = animations.steps.layout.timeline;\n\n  // Sample element measurements with style customizations\n  const measurements = [\n    { id: 'header', label: 'header', width: '100%', height: '30%', top: '0%', left: '0%', measurementStyle: { right: '-3.8rem', top: '4%' } },\n    { id: 'h1', label: 'h1', width: '80%', height: '20%', top: '5%', left: '10%' },\n    { id: 'main', label: 'main', width: '100%', height: '60%', top: '35%', left: '0%', measurementStyle: { right: '-3.8rem', top: '4%' } },\n    { id: 'p', label: 'p', width: '80%', height: '40%', top: '45%', left: '10%' },\n  ];\n\n  return (\n    <Container>\n      {/* Viewport Container */}\n      <ViewportContainer\n        initial={{ opacity: 0 }}\n        animate={isVisible ? { opacity: 1 } : { opacity: 0 }}\n        transition={{ delay: timeline.viewport.start, duration: timeline.viewport.duration }}\n      >\n        <ViewportLabel>\n          {t('animations.layout.viewport')}\n        </ViewportLabel>\n\n        {/* Grid Lines */}\n        <GridContainer>\n          {Array.from({ length: 12 }).map((_, i) => (\n            <GridLine key={i} />\n          ))}\n        </GridContainer>\n\n        {/* Elements with Measurements */}\n        {measurements.map((elem, index) => (\n          <React.Fragment key={elem.id}>\n            {/* Element Box */}\n            <ElementBox\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={isVisible ? { opacity: 1, scale: 1 } : { opacity: 0, scale: 0.8 }}\n              transition={{ delay: timeline.elementBoxes.start + index * 0.1, duration: 0.3 }}\n              style={{\n                width: elem.width,\n                height: elem.height,\n                top: elem.top,\n                left: elem.left,\n              }}\n            >\n              {/* Element Label */}\n              <ElementLabel>\n                {elem.label}\n              </ElementLabel>\n\n              {/* Measurements */}\n              <MeasurementBox\n                initial={{ opacity: 0 }}\n                animate={isVisible ? { opacity: 1 } : { opacity: 0 }}\n                transition={{ delay: timeline.calculation.start + index * 0.1 }}\n                style={elem.measurementStyle}\n              >\n                <MeasurementText>width: {elem.width}</MeasurementText>\n                <MeasurementText>height: {elem.height}</MeasurementText>\n                <MeasurementText>top: {elem.top}</MeasurementText>\n                <MeasurementText>left: {elem.left}</MeasurementText>\n              </MeasurementBox>\n\n              {/* Measurement Lines */}\n              <MeasurementLines\n                initial={{ opacity: 0 }}\n                animate={isVisible ? { opacity: 1 } : { opacity: 0 }}\n                transition={{ delay: timeline.calculation.start + index * 0.1 }}\n              >\n                {/* Width Arrow */}\n                <WidthArrow>\n                  <ArrowLine />\n                  <LeftArrowhead />\n                  <RightArrowhead />\n                </WidthArrow>\n\n                {/* Height Arrow */}\n                <HeightArrow>\n                  <VerticalArrowLine />\n                  <TopArrowhead />\n                  <BottomArrowhead />\n                </HeightArrow>\n              </MeasurementLines>\n            </ElementBox>\n          </React.Fragment>\n        ))}\n\n        {/* Reflow Hint */}\n        <ReflowHint\n          initial={{ opacity: 0 }}\n          animate={isVisible ? { opacity: 1 } : { opacity: 0 }}\n          transition={{ delay: timeline.reflowHint.start }}\n        >\n          <ReflowText>\n            <ReflowSpan>{t('animations.layout.reflow')}</ReflowSpan>：\n            <br />\n            {t('animations.layout.reflow_desc')}\n          </ReflowText>\n        </ReflowHint>\n      </ViewportContainer>\n    </Container>\n  );\n};\n\nexport default LayoutAnimation;\n"],"names":["Container","styled","div","ViewportContainer","motion","ViewportLabel","GridContainer","GridLine","ElementBox","ElementLabel","MeasurementBox","MeasurementText","MeasurementLines","WidthArrow","ArrowLine","LeftArrowhead","RightArrowhead","HeightArrow","VerticalArrowLine","TopArrowhead","BottomArrowhead","ReflowHint","ReflowText","ReflowSpan","span","_ref","isVisible","t","useTranslation","timeline","animations","steps","layout","_jsx","children","_jsxs","initial","opacity","animate","transition","delay","viewport","start","duration","Array","from","length","map","_","i","id","label","width","height","top","left","measurementStyle","right","elem","index","React","scale","elementBoxes","style","calculation","reflowHint"],"sourceRoot":""}